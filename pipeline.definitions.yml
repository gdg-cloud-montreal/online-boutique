pipelines:
# Individual Builds for Mono Repo
  - name: build_boutique_adsvc
    steps:
    - name: build_adsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: adservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/adservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: adsvc_repo
    - name: push_adsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_adsvc
        outputResources:
          - name: adsvc_build_info
    - name: xray_scan_adsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_adsvc
        inputResources:
          - name: adsvc_build_info
            trigger: false
    - name: publish_adsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_adsvc
        outputResources:
          - name: adsvc_build_info
  - name: build_boutique_cartsvc
    steps:
    - name: build_cartsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: cartservice/src
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/cartservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: cartsvc_repo
    - name: push_cartsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_cartsvc
        outputResources:
          - name: cartsvc_build_info
    - name: xray_scan_cartsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_cartsvc
        inputResources:
          - name: cartsvc_build_info
            trigger: false
    - name: publish_cartsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_cartsvc
        outputResources:
          - name: cartsvc_build_info
  - name: build_boutique_checkoutsvc
    steps:
    - name: build_checkoutsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: checkoutservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/checkoutservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: checkoutsvc_repo
    - name: push_checkoutsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_checkoutsvc
        outputResources:
          - name: checkoutsvc_build_info
    - name: xray_scan_checkoutsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_checkoutsvc
        inputResources:
          - name: checkoutsvc_build_info
            trigger: false
      - name: publish_checkoutsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_checkoutsvc
        outputResources:
          - name: checkoutsvc_build_info
  - name: build_boutique_currencysvc
    steps:
    - name: build_currencysvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: shippingservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/shippingservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: currencysvc_repo
    - name: push_currencysvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_currencysvc
        outputResources:
          - name: currencysvc_build_info
    - name: xray_scan_currencysvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_currencysvc
        inputResources:
          - name: currencysvc_build_info
     - name: publish_currencysvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_currencysvc
        outputResources:
          - name: currencysvc_build_info
  - name: build_boutique_emailsvc
    steps:
    - name: build_emailsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: emailservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/emailservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: emailsvc_repo
    - name: push_emailsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_emailsvc
        outputResources:
          - name: emailsvc_build_info
    - name: xray_scan_emailsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_emailsvc
        inputResources:
          - name: emailsvc_build_info
    - name: publish_emailsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_emailsvc
        outputResources:
          - name: emailsvc_build_info 
  - name: build_boutique_frontend
    steps:
    - name: build_frontend
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: frontend
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/frontend
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: frontendsvc_repo
    - name: push_frontend
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_frontend
        outputResources:
          - name: frontend_build_info
    - name: xray_scan_frontend
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_frontend
        inputResources:
          - name: frontend_build_info
            trigger: false  
    - name: publish_frontend_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_frontend
        outputResources:
          - name: frontend_build_info
  - name: build_boutique_paymentsvc
    steps:
    - name: build_paymentsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: paymentservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/paymentservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: paymentsvc_repo
    - name: push_paymentsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_paymentsvc
        outputResources:
          - name: paymentsvc_build_info
    - name: xray_scan_paymentsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_paymentsvc
        inputResources:
          - name: paymentsvc_build_info
            trigger: false
    - name: publish_paymentsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_paymentsvc
        outputResources:
          - name: paymentsvc_build_info
  - name: build_boutique_productcatalogsvc
    steps:
    - name: build_productcatalogsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: productcatalogservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/productcatalogservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: productcatalogsvc_repo
    - name: push_productcatalogsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_productcatalogsvc
        outputResources:
          - name: productcatalogsvc_build_info
    - name: xray_scan_productcatalogsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_productcatalogsvc
        inputResources:
          - name: productcatalogsvc_build_info
            trigger: false
    - name: publish_productcatalogsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_productcatalogsvc
        outputResources:
          - name: productcatalogsvc_build_info
  - name: build_boutique_recommendationsvc
    steps:
    - name: build_recommendationsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: recommendationservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/recommendationservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: recommendationsvc_repo
    - name: push_recommendationsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_recommendationsvc
        outputResources:
          - name: recommendationsvc_build_info
    - name: xray_scan_recommendationsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_recommendationsvc
        inputResources:
          - name: recommendationsvc_build_info
            trigger: false
    - name: publish_recommendationsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_recommendationsvc
        outputResources:
          - name: recommendationsvc_build_info
  - name: build_boutique_shippingsvc
    steps:
    - name: build_shippingsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: shippingservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/shippingservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: shippingsvc_repo
    - name: push_shippingsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_shippingsvc
        outputResources:
          - name: shippingsvc_build_info
    - name: xray_scan_shippingsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_shippingsvc
        inputResources:
          - name: shippingsvc_build_info
            trigger: false
    - name: publish_shippingsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_shippingsvc
        outputResources:
          - name: shippingsvc_build_info
  - name: build_boutique_loadgen
    steps:
    - name: build_loadgen
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: loadgenerator
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/loadgenerator
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: loadgensvc_repo
    - name: push_loadgen
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_loadgen
        outputResources:
          - name: loadgenerator_build_info
    - name: xray_scan_loadgen
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_loadgen
        inputResources:
          - name: loadgenerator_build_info
            trigger: false
    - name: publish_loadgenerator_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: xray_scan_loadgen
        outputResources:
          - name: loadgenerator_build_info