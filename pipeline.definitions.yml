pipelines:
# Individual Builds for Mono Repo
  - name: build_boutique_adsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: adsvc_repo
        outputResources:
          - name: ads_propertybag
      execution:
        onExecute:
          - write_output ads_propertybag commitSha=$res_adsvc_repo_commitSha commiterLogin=$res_adsvc_repo_committerLogin
    - name: build_adsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: adservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/adservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: adsvc_repo
    - name: push_adsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_adsvc
        outputResources:
          - name: adsvc_build_info
    - name: xray_scan_adsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_adsvc
        inputResources:
          - name: adsvc_build_info
            trigger: false
    - name: publish_adsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_adsvc
        outputResources:
          - name: adsvc_build_info
  - name: build_boutique_cartsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: cartsvc_repo
        outputResources:
          - name: cart_propertybag
      execution:
        onExecute:
          - write_output cart_propertybag commitSha=$res_cartsvc_repo_commitSha commiterLogin=$res_cartsvc_repocommitterLogin
    - name: build_cartsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: cartservice/src
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/cartservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: cartsvc_repo
    - name: push_cartsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_cartsvc
        outputResources:
          - name: cartsvc_build_info
    - name: xray_scan_cartsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_cartsvc
        inputResources:
          - name: cartsvc_build_info
            trigger: false
    - name: publish_cartsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_cartsvc
        outputResources:
          - name: cartsvc_build_info
  - name: build_boutique_checkoutsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: checkoutsvc_repo
        outputResources:
          - name: checkout_propertybag
      execution:
        onExecute:
          - write_output checkout_propertybag commitSha=$res_checkoutsvc_repo_commitSha commiterLogin=$res_checkoutsvc_repo_committerLogin
    - name: build_checkoutsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: checkoutservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/checkoutservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: checkoutsvc_repo
    - name: push_checkoutsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_checkoutsvc
        outputResources:
          - name: checkoutsvc_build_info
    - name: xray_scan_checkoutsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_checkoutsvc
        inputResources:
          - name: checkoutsvc_build_info
            trigger: false
    - name: publish_checkoutsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_checkoutsvc
        outputResources:
          - name: checkoutsvc_build_info
  - name: build_boutique_currencysvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: currencysvc_repo
        outputResources:
          - name: currency_propertybag
      execution:
        onExecute:
          - write_output currencysvc_repo commitSha=$res_currencysvc_repo_commitSha commiterLogin=$res_currencysvc_repo_committerLogin
    - name: build_currencysvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: currencyservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/currencyservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: currencysvc_repo
    - name: push_currencysvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_currencysvc
        outputResources:
          - name: currencysvc_build_info
    - name: xray_scan_currencysvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_currencysvc
        inputResources:
          - name: currencysvc_build_info
    - name: publish_currencysvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_currencysvc
        outputResources:
          - name: currencysvc_build_info
  - name: build_boutique_emailsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: emailsvc_repo
        outputResources:
          - name: email_propertybag
      execution:
        onExecute:
          - write_output email_propertybag commitSha=$res_emailsvc_repo_commitSha commiterLogin=$res_emailsvc_repo_committerLogin
    - name: build_emailsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: emailservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/emailservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: emailsvc_repo
    - name: push_emailsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_emailsvc
        outputResources:
          - name: emailsvc_build_info
    - name: xray_scan_emailsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_emailsvc
        inputResources:
          - name: emailsvc_build_info
    - name: publish_emailsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_emailsvc
        outputResources:
          - name: emailsvc_build_info 
  - name: build_boutique_frontend
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: frontendsvc_repo
        outputResources:
          - name: frontend_propertybag
      execution:
        onExecute:
          - write_output frontend_propertybag commitSha=$res_frontendsvc_repo_commitSha commiterLogin=$res_frontendsvc_repo_committerLogin
    - name: build_frontend
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: frontend
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/frontend
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: frontendsvc_repo
    - name: push_frontend
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_frontend
        outputResources:
          - name: frontend_build_info
    - name: xray_scan_frontend
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_frontend
        inputResources:
          - name: frontend_build_info
            trigger: false  
    - name: publish_frontend_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_frontend
        outputResources:
          - name: frontend_build_info
  - name: build_boutique_paymentsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: paymentsvc_repo
        outputResources:
          - name: payment_propertybag
      execution:
        onExecute:
          - write_output payment_propertybag commitSha=$res_paymentsvc_repoo_commitSha commiterLogin=$res_paymentsvc_repo_committerLogin
    - name: build_paymentsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: paymentservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/paymentservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: paymentsvc_repo
    - name: push_paymentsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_paymentsvc
        outputResources:
          - name: paymentsvc_build_info
    - name: xray_scan_paymentsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_paymentsvc
        inputResources:
          - name: paymentsvc_build_info
            trigger: false
    - name: publish_paymentsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_paymentsvc
        outputResources:
          - name: paymentsvc_build_info
  - name: build_boutique_productcatalogsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: productcatalogsvc_repo
        outputResources:
          - name: product_propertybag
      execution:
        onExecute:
          - write_output product_propertybag commitSha=$res_productcatalogsvc_repo_commitSha commiterLogin=$res_productcatalogsvc_repo_committerLogin
    - name: build_productcatalogsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: productcatalogservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/productcatalogservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: productcatalogsvc_repo
    - name: push_productcatalogsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_productcatalogsvc
        outputResources:
          - name: productcatalogsvc_build_info
    - name: xray_scan_productcatalogsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_productcatalogsvc
        inputResources:
          - name: productcatalogsvc_build_info
            trigger: false
    - name: publish_productcatalogsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_productcatalogsvc
        outputResources:
          - name: productcatalogsvc_build_info
  - name: build_boutique_recommendationsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: recommendationsvc_repo
        outputResources:
          - name: recommendations_propertybag
      execution:
        onExecute:
          - write_output recommendations_propertybag commitSha=$res_recommendationsvc_repo_commitSha commiterLogin=$res_recommendationsvc_repo_committerLogin
    - name: build_recommendationsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: recommendationservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/recommendationservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: recommendationsvc_repo
    - name: push_recommendationsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_recommendationsvc
        outputResources:
          - name: recommendationsvc_build_info
    - name: xray_scan_recommendationsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_recommendationsvc
        inputResources:
          - name: recommendationsvc_build_info
            trigger: false
    - name: publish_recommendationsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_recommendationsvc
        outputResources:
          - name: recommendationsvc_build_info
  - name: build_boutique_shippingsvc
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: shippingsvc_repo
        outputResources:
          - name: shipping_propertybag
      execution:
        onExecute:
          - write_output shipping_propertybag commitSha=$res_shippingsvc_repo_commitSha commiterLogin=$res_shippingsvc_repo_committerLogin
    - name: build_shippingsvc
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: shippingservice
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/shippingservice
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: shippingsvc_repo
    - name: push_shippingsvc
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_shippingsvc
        outputResources:
          - name: shippingsvc_build_info
    - name: xray_scan_shippingsvc
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_shippingsvc
        inputResources:
          - name: shippingsvc_build_info
            trigger: false
    - name: publish_shippingsvc_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_shippingsvc
        outputResources:
          - name: shippingsvc_build_info
  - name: build_boutique_loadgen
    steps:
    - name: extra_buildInfo
      type: Bash
      configuration:
        inputResources:
          - name: loadgensvc_repo
        outputResources:
          - name: load_propertybag
      execution:
        onExecute:
          - write_output load_propertybag commitSha=$res_loadgensvc_repo_commitSha commiterLogin=$res_loadgensvc_repo_committerLogin
    - name: build_loadgen
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: loadgenerator
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/boutique/loadgenerator
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: server_name
        inputResources:
          - name: loadgensvc_repo
    - name: push_loadgen
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_loadgen
        outputResources:
          - name: loadgenerator_build_info
    - name: xray_scan_loadgen
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: build_loadgen
        inputResources:
          - name: loadgenerator_build_info
            trigger: false
    - name: publish_loadgenerator_build
      type: PublishBuildInfo
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name: push_loadgen
        outputResources:
          - name: loadgenerator_build_info



      - name: p1_s3
        type: Bash
        configuration:
          inputSteps:
            - name: p1_s2
          outputResources:
            - name: myPropertyBag
        execution:
          onExecute:
            - echo $current_runid
            # Writes current run number to pipeline state
            - add_pipeline_variables prev_runid=$run_id
            # Uses an utility function to update the output resource with the commitSha that triggered this run
            # Dependent pipelines can be configured to trigger when this resource is updated
            # Utility functions documentation: https://www.jfrog.com/confluence/display/JFROG/Pipelines+Utility+Functions
            - write_output myPropertyBag commitSha=$commitSha runID=$current_runid